{"version":3,"file":"static/js/93.c62aa896.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/common/EditableSpan.module.css?0834","components/common/Pagination.tsx","webpack://samurai-way/./src/components/Users/User/User.module.css?cfea","webpack://samurai-way/./src/components/Users/User/FollowButton/FollowButton.module.css?5041","components/Users/User/FollowButton/FollowButton.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","Redux/user-selectors.ts","components/Users/UsersContainer.tsx","components/common/EditableSpan.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"EditableSpan_pagination__OL+34\",\"inputPagination\":\"EditableSpan_inputPagination__wjeWf\"};","import React from \"react\";\nimport {UsersType} from \"../../Redux/redux_store\";\nimport s from '../common/EditableSpan.module.css'\nimport {EditableSpan} from \"./EditableSpan\";\nexport type CSSType= typeof s\ntype UsersPropsType = {\n    usersPage: UsersType;\n    onPageChanged: (page: number | string) => void\n}\nexport const Pagination = React.memo((props: UsersPropsType) => {\n    const totalCount=props.usersPage.totalCount;\n    const curPage=props.usersPage.currentPage;\n    const pagesCount = Math.ceil(totalCount / props.usersPage.pageSize);\n    let pages = [];\n    if (curPage < 6) {\n        for (let i = 1; i<totalCount && i < 8; i++) {\n            pages.push(i)\n        }\n    } else {\n        for (let i = curPage-2; i < curPage+3 && i<=pagesCount; i++) {\n            pages.push(i)\n        }\n    }\n    const onKeyPress=(e:React.KeyboardEvent<HTMLInputElement>,inputTitle:string) => {\n        if (e.key === 'Enter' && +inputTitle>0 && +inputTitle <= pagesCount) props.onPageChanged(+inputTitle)\n    }\n    const verificationRule: (value:string)=>boolean=(value)=>value ==='' ||\n        (+value>0 && +value<=pagesCount && value.length<100);\n    const editableSpanProps ={\n        defaultInputTitleValue:curPage? curPage.toString():'1',\n        labelText: ' ... ',\n        verificationRule,\n        onKeyPress,\n        className: s\n    }\n    return (\n        <div className={s.container}>\n            <div className={s.paginationBlock}>\n                {curPage >5 && <span className={s.pagination} style={curPage === 1 ?\n                    {fontWeight: \"bold\"} : {}} onClick={() => {props.onPageChanged(1)}}>1</span>}\n                {curPage>5 && <EditableSpan {...editableSpanProps} id='firstPagination'/>}\n                {pages.map(p => <span key={p} className={s.pagination} style={curPage === p?\n                    {fontWeight: \"bold\"} : {}} onClick={() => {props.onPageChanged(p)}}>{p}</span>)}\n                {pagesCount>8 && curPage<pagesCount-3 && <EditableSpan {...editableSpanProps} id='secondPagination'/>}\n                {pagesCount>6 && curPage < pagesCount-2 && <span className={s.pagination} style={curPage === pagesCount ?\n                    {fontWeight: \"bold\"} : {}} onClick={() => {props.onPageChanged(pagesCount)}}>{pagesCount}</span>}\n                {pagesCount > 10 && curPage > 1 && <span className={s.pagination} onClick={() => {\n                    props.onPageChanged(curPage >1 ? curPage - 1 : pagesCount)\n                }}>{'\\<<'} </span>}\n                {pagesCount > 10 && curPage!== pagesCount && <span className={s.pagination} onClick={() => {\n                    props.onPageChanged(curPage < pagesCount ? curPage + 1 : pagesCount)\n                }}>{'\\>>'}</span>}\n            </div>\n        </div>\n    )\n})","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"User_container__hNb6X\",\"follow\":\"User_follow__guBJe\",\"avatar\":\"User_avatar__V2sdX\",\"name_status\":\"User_name_status__YtsJ8\"};","// extracted by mini-css-extract-plugin\nexport default {\"follow\":\"FollowButton_follow__kWANR\",\"unfollow\":\"FollowButton_unfollow__N6PkX\",\"container\":\"FollowButton_container__88T6V\"};","import React, {useState} from \"react\";\nimport s from './FollowButton.module.css'\n\ntype FollowButtonType = {\n    userID: number,\n    followed: boolean\n    followUsers: (isFollow: boolean, userID: number, setDisableButton: React.Dispatch<React.SetStateAction<boolean>>)=>void\n}\nexport const FollowButton = (props: FollowButtonType) => {\n    const [isDisableButton, setDisableButton] = useState(false);\n    return <div>{!props.followed && <button disabled={isDisableButton} onClick={() => {\n        props.followUsers(true, props.userID, setDisableButton)}}><div className={s.container}><div className={s.follow}></div>Follow</div></button>}\n        {props.followed && <button disabled={isDisableButton} onClick={() => {\n            props.followUsers(false, props.userID, setDisableButton)}}><div className={s.container}><div className={s.unfollow}></div>Unfollow</div></button>}\n    </div>\n}","import {UserType} from \"../../../Redux/users_reducer\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./User.module.css\";\nimport userPhoto from \"../../../assets/images/user.svg\";\nimport React from \"react\";\nimport {FollowButton} from \"./FollowButton/FollowButton\";\n\nexport type UserPropsType = {\n    u: UserType,\n    followUsers: (isFollow: boolean, userID: number, setDisableButton: React.Dispatch<React.SetStateAction<boolean>>) => void\n}\nexport const User = React.memo((props: UserPropsType) => {\n    return (\n        <div key={props.u.id} className={s.container}>\n                    <span>\n                        <NavLink to={'/profile/' + props.u.id}>\n                        <div><img className={s.avatar} src={props.u.photos.small ? props.u.photos.small : userPhoto}\n                                  alt='avatar'/>\n                        </div>\n                        </NavLink>\n                        <div className={s.follow}>\n                           <FollowButton userID={props.u.id} followed={props.u.followed} followUsers={props.followUsers}/>\n                        </div>\n                    </span>\n            <span className={s.name_status}>\n                <div>{props.u.name}</div>\n                <div>{props.u.status}</div>\n            </span>\n        </div>)\n})\n","import React, {useEffect} from \"react\";\nimport {UsersType} from \"../../Redux/redux_store\";\nimport s from './Users.module.css'\nimport {UserType} from \"../../Redux/users_reducer\";\nimport {Pagination} from \"../common/Pagination\";\nimport {User} from \"./User/User\";\nimport {useLocation} from \"react-router-dom\";\n\ntype UsersPropsType = {\n    usersPage: UsersType;\n    onPageChanged: (page: number | string) => void;\n    followUsers: (isFollow: boolean, userId: number, setDisableButton: React.Dispatch<React.SetStateAction<boolean>>) => void\n}\n\nexport const Users = React.memo((props: UsersPropsType) => {\n    const location = useLocation();\n    const page = new URLSearchParams(location.search).get('page');\n    useEffect(() => {\n        if (page) props.onPageChanged(+page)\n    }, [page]);\n    return (\n        <div className={s.container}>\n            <div className={s.pagination}><Pagination usersPage={props.usersPage} onPageChanged={props.onPageChanged}/>\n            </div>\n            <div className={s.users}>\n                {props.usersPage.userData.map((u: UserType) =>\n                    <User key={u.id} u={u} followUsers={props.followUsers}/>\n                )}\n            </div>\n        </div>\n    )\n})\n","import {StateType} from \"./redux_store\";\n\nexport const getUsersPage=(state:StateType)=>state.usersPage","import React, {ReactNode} from \"react\";\nimport {connect} from \"react-redux\";\nimport {StateType, UsersType} from \"../../Redux/redux_store\";\nimport {followUsers, getUsers} from \"../../Redux/users_reducer\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../common/Preloader\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {getUsersPage} from \"../../Redux/user-selectors\";\n\ntype UsersPropsType = {\n    usersPage: UsersType;\n    getUsers:(currentPage:number | string, pageSize:number)=>void;\n    followUsers:(isFollow: boolean, userID: number, setFollowingProgress: React.Dispatch<React.SetStateAction<boolean>>)=>void\n}\n\nclass UsersContainer extends React.Component<UsersPropsType, {children?: ReactNode}> {\n    componentDidMount() {this.props.getUsers(this.props.usersPage.currentPage, this.props.usersPage.pageSize)}\n    onPageChanged = (page: number | string) => {this.props.getUsers(page, this.props.usersPage.pageSize)}\n    render() {\n        return <>\n            {this.props.usersPage.isFetching? <Preloader/>:null}\n        <Users usersPage={this.props.usersPage} onPageChanged={this.onPageChanged}\n               followUsers={this.props.followUsers}/>\n        </>\n    }\n}\nconst mapStateToProps = (state: StateType) => ({usersPage: getUsersPage(state)})\nconst mapDispatchToProps = {getUsers, followUsers}\nexport default compose<React.ElementType>(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(UsersContainer)","import React, {ChangeEvent, useState} from \"react\";\nimport {CSSType} from \"./Pagination\";\n\ntype EditableSpanPropsType = {\n    id:string\n    defaultInputTitleValue: string\n    labelText: string\n    onKeyPress: (e:React.KeyboardEvent<HTMLInputElement>,inputTitle:string)=>void\n    verificationRule:(value:string)=>boolean,\n    className:CSSType\n}\nexport const EditableSpan = React.memo((props: EditableSpanPropsType) => {\n    const [inputTitle, setInputTitle] = useState(props.defaultInputTitleValue);\n    const [editableSpanVision, setEditableSpanVision] = useState(false);\n    return (\n        editableSpanVision ?\n            <input id={props.id} className={props.className.inputPagination} autoFocus={true} value={inputTitle}\n                   onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                       const value: string | null = e.currentTarget.value\n                       if (props.verificationRule(value)) setInputTitle(value)\n                   }}\n                   onKeyPress={(e:React.KeyboardEvent<HTMLInputElement>)=>{props.onKeyPress(e, inputTitle)\n                       if (e.key==='Enter') {setEditableSpanVision(!editableSpanVision);\n                       setInputTitle('1')}\n            }}\n                   onBlur={() => {\n                       setEditableSpanVision(!editableSpanVision);\n                       setInputTitle('1')\n                   }} title='Type and press Enter'/> :\n            <span className={props.className.pagination} onClick={() => {\n                setEditableSpanVision(!editableSpanVision);\n                setInputTitle(props.defaultInputTitleValue)\n            }}> {props.labelText} </span>)\n})","import {Redirect} from \"react-router-dom\";\nimport React, {ComponentType} from \"react\";\nimport {StateType} from \"../Redux/redux_store\";\nimport {connect} from \"react-redux\";\ntype mapSTPType = {isAuth:boolean}\n\nconst mapSTP=(state:StateType):mapSTPType=>({isAuth: !!state.auth.login})\nexport function withAuthRedirect<P>(Component:ComponentType<P>) {\n    function RedirectComponent(props:mapSTPType) {\n        const {isAuth, ...restProps}= props\n        if (!props.isAuth) return <Redirect to='/login'/>\n        return <Component {...restProps as P}/>\n    }\n    return connect(mapSTP)(RedirectComponent)\n}\n\n"],"names":["Pagination","React","props","totalCount","usersPage","curPage","currentPage","pagesCount","Math","ceil","pageSize","pages","i","push","editableSpanProps","defaultInputTitleValue","toString","labelText","verificationRule","value","length","onKeyPress","e","inputTitle","key","onPageChanged","className","s","style","fontWeight","onClick","EditableSpan","id","map","p","FollowButton","useState","isDisableButton","setDisableButton","followed","disabled","followUsers","userID","User","to","u","src","photos","small","userPhoto","alt","name","status","Users","location","useLocation","page","URLSearchParams","search","get","useEffect","userData","getUsersPage","state","UsersContainer","getUsers","this","isFetching","Preloader","mapDispatchToProps","compose","connect","withAuthRedirect","setInputTitle","editableSpanVision","setEditableSpanVision","inputPagination","autoFocus","onChange","currentTarget","onBlur","title","pagination","mapSTP","isAuth","auth","login","Component","restProps"],"sourceRoot":""}